name: awesome-list-updater

permissions:
  contents: write
  pull-requests: write

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to use for this update"
        required: false
      debug:
        type: boolean
        description: "Set the Debug Flag"
        default: False
        required: false
#  schedule:
#    - cron: "0 18 * * 4" # Every thursday at 6pm

env:
  BRANCH_PREFIX: "update/"
  DEFAULT_BRANCH: "main"

jobs:
  update-awesome-list:
    runs-on: ubuntu-latest
    steps:
      - if: ${{ github.event.inputs != null  &&  github.event.inputs.version != null }}
        name: set-version-from-input
        run: echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
      - if: ${{ ! (env.VERSION != null && env.VERSION != '') }}
        name: set-version-via-date
        run: echo "VERSION=$(date '+%Y.%m.%d')" >> $GITHUB_ENV
      - uses: actions/checkout@v4
      - name: check-version-tag
        shell: bash
        run: |
          git fetch --tags --force
          git show-ref --tags --verify --quiet -- "refs/tags/${{ env.VERSION }}" && echo "VERSION=$(date '+%Y.%m.%d-%H.%M')" >> $GITHUB_ENV || exit 0
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: awesome-lists-update
        uses: derekvincent/action-awesome-list-updater@v0.1.1
        with:
          debug: ${{ env.DEBUG }}
      - run: rm .git/hooks -rf
      - run: sudo chown -R $USER:$USER .
      - name: create-pull-request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          #          add-paths: |
          #              history/**
          #              logs/**
          commit-message: "Update awesome-list for version ${{ env.VERSION  }}"
          title: "Awesome-List update: ${{ env.VERSION  }}"
          body: "To finish this update: Select <code>Merge pull request</code> below and <code>Confirm merge</code>. Also, make sure to publish the created draft release in the [releases section](../releases) as well."
          branch: ${{ env.BRANCH_PREFIX }}${{ env.VERSION  }}
          base: ${{ env.DEFAULT_BRANCH }}
          delete-branch: true

      - name: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION  }}
          release_name: "Update: ${{ env.VERSION  }}"
          body_path: "latest-changes.md"
          draft: true
          prerelease: false
